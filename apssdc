{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyN3qmSv2L/l0hVNlrD5cFyj",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/psv26/employee-burnout-prediction-rate/blob/main/apssdc\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 159
        },
        "id": "EcZFZb3kii1y",
        "outputId": "b9244919-38bc-416c-d27a-c876391e041d"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'file' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-1c9aab22f0c6>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mfiles\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0muploaded\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfile\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'file' is not defined"
          ]
        }
      ],
      "source": [
        "from google.colab import files\n",
        "uploaded=file.upload()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.impute import SimpleImputer\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.metrics import accuracy_score, classification_report\n",
        "\n",
        "# Load the dataset\n",
        "file_path = '/content/HRDataset_v14.csv'\n",
        "hr_data = pd.read_csv(file_path)\n",
        "\n",
        "# Display the first few rows of the dataset\n",
        "print(\"First few rows of the dataset:\")\n",
        "print(hr_data.head())\n",
        "\n",
        "# Display the columns in the dataset\n",
        "print(\"\\nColumns in the dataset:\")\n",
        "print(hr_data.columns)\n",
        "\n",
        "# 'Termd' is the target variable indicating employee turnover\n",
        "target_variable = 'Termd'\n",
        "\n",
        "# Identify features and target\n",
        "X = hr_data.drop(columns=[target_variable])\n",
        "y = hr_data[target_variable]\n",
        "\n",
        "# Encode categorical variables\n",
        "X = pd.get_dummies(X)\n",
        "\n",
        "# Handle missing values\n",
        "imputer = SimpleImputer(strategy='mean')\n",
        "X = imputer.fit_transform(X)\n",
        "\n",
        "# Split the data into training and test sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Initialize and train the model\n",
        "model = RandomForestClassifier(random_state=42)\n",
        "model.fit(X_train, y_train)\n",
        "\n",
        "# Make predictions\n",
        "y_pred = model.predict(X_test)\n",
        "\n",
        "# Evaluate the model\n",
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "report = classification_report(y_test, y_pred)\n",
        "\n",
        "print(\"\\nModel Accuracy:\", accuracy)\n",
        "print(\"\\nClassification Report:\")\n",
        "print(report)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OzIQumRTjO4V",
        "outputId": "c023657e-b21c-43b0-dc3c-ef95271da4ec"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "First few rows of the dataset:\n",
            "              Employee_Name  EmpID  MarriedID  MaritalStatusID  GenderID  \\\n",
            "0       Adinolfi, Wilson  K  10026          0                0         1   \n",
            "1  Ait Sidi, Karthikeyan     10084          1                1         1   \n",
            "2         Akinkuolie, Sarah  10196          1                1         0   \n",
            "3              Alagbe,Trina  10088          1                1         0   \n",
            "4          Anderson, Carol   10069          0                2         0   \n",
            "\n",
            "   EmpStatusID  DeptID  PerfScoreID  FromDiversityJobFairID  Salary  ...  \\\n",
            "0            1       5            4                       0   62506  ...   \n",
            "1            5       3            3                       0  104437  ...   \n",
            "2            5       5            3                       0   64955  ...   \n",
            "3            1       5            3                       0   64991  ...   \n",
            "4            5       5            3                       0   50825  ...   \n",
            "\n",
            "      ManagerName  ManagerID RecruitmentSource PerformanceScore  \\\n",
            "0  Michael Albert       22.0          LinkedIn          Exceeds   \n",
            "1      Simon Roup        4.0            Indeed      Fully Meets   \n",
            "2  Kissy Sullivan       20.0          LinkedIn      Fully Meets   \n",
            "3    Elijiah Gray       16.0            Indeed      Fully Meets   \n",
            "4  Webster Butler       39.0     Google Search      Fully Meets   \n",
            "\n",
            "   EngagementSurvey EmpSatisfaction SpecialProjectsCount  \\\n",
            "0              4.60               5                    0   \n",
            "1              4.96               3                    6   \n",
            "2              3.02               3                    0   \n",
            "3              4.84               5                    0   \n",
            "4              5.00               4                    0   \n",
            "\n",
            "  LastPerformanceReview_Date DaysLateLast30 Absences  \n",
            "0                  1/17/2019              0        1  \n",
            "1                  2/24/2016              0       17  \n",
            "2                  5/15/2012              0        3  \n",
            "3                   1/3/2019              0       15  \n",
            "4                   2/1/2016              0        2  \n",
            "\n",
            "[5 rows x 36 columns]\n",
            "\n",
            "Columns in the dataset:\n",
            "Index(['Employee_Name', 'EmpID', 'MarriedID', 'MaritalStatusID', 'GenderID',\n",
            "       'EmpStatusID', 'DeptID', 'PerfScoreID', 'FromDiversityJobFairID',\n",
            "       'Salary', 'Termd', 'PositionID', 'Position', 'State', 'Zip', 'DOB',\n",
            "       'Sex', 'MaritalDesc', 'CitizenDesc', 'HispanicLatino', 'RaceDesc',\n",
            "       'DateofHire', 'DateofTermination', 'TermReason', 'EmploymentStatus',\n",
            "       'Department', 'ManagerName', 'ManagerID', 'RecruitmentSource',\n",
            "       'PerformanceScore', 'EngagementSurvey', 'EmpSatisfaction',\n",
            "       'SpecialProjectsCount', 'LastPerformanceReview_Date', 'DaysLateLast30',\n",
            "       'Absences'],\n",
            "      dtype='object')\n",
            "\n",
            "Model Accuracy: 1.0\n",
            "\n",
            "Classification Report:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       1.00      1.00      1.00        41\n",
            "           1       1.00      1.00      1.00        22\n",
            "\n",
            "    accuracy                           1.00        63\n",
            "   macro avg       1.00      1.00      1.00        63\n",
            "weighted avg       1.00      1.00      1.00        63\n",
            "\n"
          ]
        }
      ]
    }
  ]
}